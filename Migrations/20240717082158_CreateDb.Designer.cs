// <auto-generated />
using System;
using EnergyApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnergyApi.Migrations
{
    [DbContext(typeof(TNDbContext))]
    [Migration("20240717082158_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnergyApi.Data.Model.ObjectPotrebleniya", b =>
                {
                    b.Property<int>("ObjectPotrebleniyaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectPotrebleniyaId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubOrganizationId")
                        .HasColumnType("int");

                    b.HasKey("ObjectPotrebleniyaId");

                    b.HasIndex("SubOrganizationId");

                    b.ToTable("ObjectPotrebleniyas");

                    b.HasData(
                        new
                        {
                            ObjectPotrebleniyaId = 1,
                            Address = "ул. Динамо, дом 1",
                            Name = "Объект потребления 1",
                            SubOrganizationId = 1
                        },
                        new
                        {
                            ObjectPotrebleniyaId = 2,
                            Address = "ул. Динамо, дом 2",
                            Name = "Объект потребления 2",
                            SubOrganizationId = 1
                        },
                        new
                        {
                            ObjectPotrebleniyaId = 3,
                            Address = "ул. Динамо, дом 3",
                            Name = "Объект потребления 3",
                            SubOrganizationId = 2
                        },
                        new
                        {
                            ObjectPotrebleniyaId = 4,
                            Address = "ул. Динамо, дом 4",
                            Name = "Объект потребления 4",
                            SubOrganizationId = 2
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizationId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            OrganizationId = 1,
                            Address = "г. Электроугли, Электродный проезд, дом 1",
                            Name = "ЗАО Электроовцы"
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.RaschetnyPriborUcheta", b =>
                {
                    b.Property<int>("RaschetnyPriborUchetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaschetnyPriborUchetaId"));

                    b.Property<int>("TochkaIzmereniyasId")
                        .HasColumnType("int");

                    b.Property<int>("TochkaPostavkisId")
                        .HasColumnType("int");

                    b.HasKey("RaschetnyPriborUchetaId");

                    b.ToTable("RaschetnyPriborUchetas");

                    b.HasData(
                        new
                        {
                            RaschetnyPriborUchetaId = 1,
                            TochkaIzmereniyasId = 1,
                            TochkaPostavkisId = 1
                        },
                        new
                        {
                            RaschetnyPriborUchetaId = 2,
                            TochkaIzmereniyasId = 2,
                            TochkaPostavkisId = 2
                        },
                        new
                        {
                            RaschetnyPriborUchetaId = 3,
                            TochkaIzmereniyasId = 3,
                            TochkaPostavkisId = 3
                        },
                        new
                        {
                            RaschetnyPriborUchetaId = 4,
                            TochkaIzmereniyasId = 4,
                            TochkaPostavkisId = 4
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.Schetchik", b =>
                {
                    b.Property<int>("SchetchikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchetchikId"));

                    b.Property<DateTime>("DatePoverki")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("SchType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TochkaIzmereniyaId")
                        .HasColumnType("int");

                    b.HasKey("SchetchikId");

                    b.HasIndex("TochkaIzmereniyaId")
                        .IsUnique();

                    b.ToTable("Schetchiks");

                    b.HasData(
                        new
                        {
                            SchetchikId = 1,
                            DatePoverki = new DateTime(2011, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Number = 1,
                            SchType = "стандартный",
                            TochkaIzmereniyaId = 1
                        },
                        new
                        {
                            SchetchikId = 2,
                            DatePoverki = new DateTime(2012, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Number = 2,
                            SchType = "стандартный",
                            TochkaIzmereniyaId = 2
                        },
                        new
                        {
                            SchetchikId = 3,
                            DatePoverki = new DateTime(2013, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Number = 3,
                            SchType = "стандартный",
                            TochkaIzmereniyaId = 3
                        },
                        new
                        {
                            SchetchikId = 4,
                            DatePoverki = new DateTime(2018, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Number = 4,
                            SchType = "стандартный",
                            TochkaIzmereniyaId = 4
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.SubOrganization", b =>
                {
                    b.Property<int>("SubOrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubOrganizationId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("SubOrganizationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("SubOrganizations");

                    b.HasData(
                        new
                        {
                            SubOrganizationId = 1,
                            Address = "пос. Заветы Ильича, проспект Электрификации, дом 2",
                            Name = "ООО ЭлектроРога",
                            OrganizationId = 1
                        },
                        new
                        {
                            SubOrganizationId = 2,
                            Address = "пос. Заветы Ильича, ул. Советская, дом 14",
                            Name = "ОАО ЭлектроКопыта",
                            OrganizationId = 1
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TochkaIzmereniya", b =>
                {
                    b.Property<int>("TochkaIzmereniyaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjectPotrebleniyaId")
                        .HasColumnType("int");

                    b.HasKey("TochkaIzmereniyaId");

                    b.HasIndex("ObjectPotrebleniyaId");

                    b.ToTable("TochkaIzmereniyas");

                    b.HasData(
                        new
                        {
                            TochkaIzmereniyaId = 1,
                            Name = "Точка Измерения 1",
                            ObjectPotrebleniyaId = 1
                        },
                        new
                        {
                            TochkaIzmereniyaId = 2,
                            Name = "Точка Измерения 2",
                            ObjectPotrebleniyaId = 2
                        },
                        new
                        {
                            TochkaIzmereniyaId = 3,
                            Name = "Точка Измерения 3",
                            ObjectPotrebleniyaId = 3
                        },
                        new
                        {
                            TochkaIzmereniyaId = 4,
                            Name = "Точка Измерения 4",
                            ObjectPotrebleniyaId = 4
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TochkaPostavki", b =>
                {
                    b.Property<int>("TochkaPostavkiId")
                        .HasColumnType("int");

                    b.Property<float>("MaxPower")
                        .HasColumnType("real");

                    b.Property<int>("ObjectPotrebleniyaId")
                        .HasColumnType("int");

                    b.HasKey("TochkaPostavkiId");

                    b.HasIndex("ObjectPotrebleniyaId");

                    b.ToTable("PointPostavkis");

                    b.HasData(
                        new
                        {
                            TochkaPostavkiId = 1,
                            MaxPower = 300f,
                            ObjectPotrebleniyaId = 1
                        },
                        new
                        {
                            TochkaPostavkiId = 2,
                            MaxPower = 300f,
                            ObjectPotrebleniyaId = 2
                        },
                        new
                        {
                            TochkaPostavkiId = 3,
                            MaxPower = 300f,
                            ObjectPotrebleniyaId = 3
                        },
                        new
                        {
                            TochkaPostavkiId = 4,
                            MaxPower = 300f,
                            ObjectPotrebleniyaId = 4
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TransformatorNapryazheniya", b =>
                {
                    b.Property<int>("TransformatorNapryazheniyaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransformatorNapryazheniyaId"));

                    b.Property<DateTime>("DatePoverki")
                        .HasColumnType("datetime2");

                    b.Property<int>("KTN")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("TnType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TochkaIzmereniyaId")
                        .HasColumnType("int");

                    b.HasKey("TransformatorNapryazheniyaId");

                    b.HasIndex("TochkaIzmereniyaId")
                        .IsUnique();

                    b.ToTable("TransformatorNapryazheniyas");

                    b.HasData(
                        new
                        {
                            TransformatorNapryazheniyaId = 1,
                            DatePoverki = new DateTime(2011, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KTN = 11,
                            Number = 1,
                            TnType = "",
                            TochkaIzmereniyaId = 1
                        },
                        new
                        {
                            TransformatorNapryazheniyaId = 2,
                            DatePoverki = new DateTime(2012, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KTN = 12,
                            Number = 2,
                            TnType = "",
                            TochkaIzmereniyaId = 2
                        },
                        new
                        {
                            TransformatorNapryazheniyaId = 3,
                            DatePoverki = new DateTime(2013, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KTN = 13,
                            Number = 3,
                            TnType = "",
                            TochkaIzmereniyaId = 3
                        },
                        new
                        {
                            TransformatorNapryazheniyaId = 4,
                            DatePoverki = new DateTime(2014, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KTN = 14,
                            Number = 4,
                            TnType = "",
                            TochkaIzmereniyaId = 4
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TransformatorToka", b =>
                {
                    b.Property<int>("TransformatorTokaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransformatorTokaId"));

                    b.Property<DateTime>("DatePoverki")
                        .HasColumnType("datetime2");

                    b.Property<int>("KTT")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TochkaIzmereniyaId")
                        .HasColumnType("int");

                    b.Property<string>("TtType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransformatorTokaId");

                    b.HasIndex("TochkaIzmereniyaId")
                        .IsUnique();

                    b.ToTable("TransformatorTokas");

                    b.HasData(
                        new
                        {
                            TransformatorTokaId = 1,
                            DatePoverki = new DateTime(2011, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KTT = 11,
                            Number = 11,
                            TochkaIzmereniyaId = 1,
                            TtType = ""
                        },
                        new
                        {
                            TransformatorTokaId = 2,
                            DatePoverki = new DateTime(2012, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KTT = 21,
                            Number = 21,
                            TochkaIzmereniyaId = 2,
                            TtType = ""
                        },
                        new
                        {
                            TransformatorTokaId = 3,
                            DatePoverki = new DateTime(2013, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KTT = 31,
                            Number = 31,
                            TochkaIzmereniyaId = 3,
                            TtType = ""
                        },
                        new
                        {
                            TransformatorTokaId = 4,
                            DatePoverki = new DateTime(2014, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KTT = 41,
                            Number = 41,
                            TochkaIzmereniyaId = 4,
                            TtType = ""
                        });
                });

            modelBuilder.Entity("EnergyApi.Data.Model.ObjectPotrebleniya", b =>
                {
                    b.HasOne("EnergyApi.Data.Model.SubOrganization", "SubOrganization")
                        .WithMany("ObjectPotrebleniyas")
                        .HasForeignKey("SubOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubOrganization");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.Schetchik", b =>
                {
                    b.HasOne("EnergyApi.Data.Model.TochkaIzmereniya", "TochkaIzmereniya")
                        .WithOne("Schetchik")
                        .HasForeignKey("EnergyApi.Data.Model.Schetchik", "TochkaIzmereniyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TochkaIzmereniya");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.SubOrganization", b =>
                {
                    b.HasOne("EnergyApi.Data.Model.Organization", "Organization")
                        .WithMany("SubOrganizations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TochkaIzmereniya", b =>
                {
                    b.HasOne("EnergyApi.Data.Model.ObjectPotrebleniya", "ObjectPotrebleniya")
                        .WithMany("TochkaIzmereniyas")
                        .HasForeignKey("ObjectPotrebleniyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnergyApi.Data.Model.RaschetnyPriborUcheta", null)
                        .WithMany("TochkaIzmereniyas")
                        .HasForeignKey("TochkaIzmereniyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjectPotrebleniya");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TochkaPostavki", b =>
                {
                    b.HasOne("EnergyApi.Data.Model.ObjectPotrebleniya", "ObjectPotrebleniya")
                        .WithMany("TochkaPostavki")
                        .HasForeignKey("ObjectPotrebleniyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnergyApi.Data.Model.RaschetnyPriborUcheta", null)
                        .WithMany("TochkaPostavkis")
                        .HasForeignKey("TochkaPostavkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjectPotrebleniya");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TransformatorNapryazheniya", b =>
                {
                    b.HasOne("EnergyApi.Data.Model.TochkaIzmereniya", "TochkaIzmereniya")
                        .WithOne("TransformatorNapryazheniya")
                        .HasForeignKey("EnergyApi.Data.Model.TransformatorNapryazheniya", "TochkaIzmereniyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TochkaIzmereniya");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TransformatorToka", b =>
                {
                    b.HasOne("EnergyApi.Data.Model.TochkaIzmereniya", "TochkaIzmereniya")
                        .WithOne("TransformatorToka")
                        .HasForeignKey("EnergyApi.Data.Model.TransformatorToka", "TochkaIzmereniyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TochkaIzmereniya");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.ObjectPotrebleniya", b =>
                {
                    b.Navigation("TochkaIzmereniyas");

                    b.Navigation("TochkaPostavki");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.Organization", b =>
                {
                    b.Navigation("SubOrganizations");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.RaschetnyPriborUcheta", b =>
                {
                    b.Navigation("TochkaIzmereniyas");

                    b.Navigation("TochkaPostavkis");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.SubOrganization", b =>
                {
                    b.Navigation("ObjectPotrebleniyas");
                });

            modelBuilder.Entity("EnergyApi.Data.Model.TochkaIzmereniya", b =>
                {
                    b.Navigation("Schetchik")
                        .IsRequired();

                    b.Navigation("TransformatorNapryazheniya")
                        .IsRequired();

                    b.Navigation("TransformatorToka")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
